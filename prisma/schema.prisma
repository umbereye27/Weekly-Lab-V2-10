// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  email     String   @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  skills      Skill[]
  reflections Reflection[]

  @@map("users")
}

model Skill {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks       Task[]
  reflections Reflection[]

  @@map("skills")
}

model Task {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  description String?
  completed   Boolean  @default(false)
  skillId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  skill Skill @relation(fields: [skillId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

model Reflection {
  id        String   @id @default(cuid()) @map("_id")
  content   String
  skillId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  skill Skill @relation(fields: [skillId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("reflections")
}
